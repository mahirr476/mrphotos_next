services:
  postgres:
    image: postgres:15-alpine
    container_name: photo_gallery_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network

  backend:
    build:
      context: ./server
      dockerfile: ../docker/backend/Dockerfile
    container_name: mrphotos_backend
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      JWT_SECRET: ${JWT_SECRET}
      PORT: 3001
    ports:
      - "3001:3001"
    depends_on:
      - postgres
    networks:
      - app_network
    volumes:
      - ./server:/usr/src/app
      - /usr/src/app/node_modules

  # Optional: Include frontend if you want to containerize it
  frontend:
    build:
      context: ./client/photo-gallery
      dockerfile: ../../docker/frontend/Dockerfile
    container_name: mrphotos_frontend
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_URL: http://backend:3001
    depends_on:
      - backend
    networks:
      - app_network
    volumes:
      - ./client/photo-gallery:/usr/src/app
      - /usr/src/app/.next
      - /usr/src/app/node_modules

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data: